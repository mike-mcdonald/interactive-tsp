version: 2.1

build_container_config: &build_container_config
  docker:
    - image: circleci/node:13
azure_container_config: &azure_container_config
  docker:
    - image: mcdonaldmike/circleci-azure:latest

docker_cache_key: &docker_cache_key
  v1-docker_cache-{{ .Revision }}
npm_cache_key: &npm_cache_key
  v1-npm_cache-{{ checksum "package-lock.json" }}
npm_build_cache_key: &npm_build_cache_key
  v1-npm_build_cache-{{ .Revision }}

restore_docker_cache: &restore_docker_cache
  restore_cache:
    name: Restore cache
    key: *docker_cache_key
restore_npm_cache: &restore_npm_cache
  restore_cache:
    name: Restore NPM install cache
    key: *npm_cache_key
restore_npm_build_cache: &restore_npm_build_cache
  restore_cache:
    name: Restore NPM build cache
    key: *npm_build_cache_key

azure_login: &azure_login
  run:
    name: Login to Azure as CirleCI service principal
    command: |
      az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
jobs:
  install_package_deps:
    <<: *build_container_config
    steps:
      - checkout
      - *restore_npm_cache
      - run:
          name: NPM install
          command: |
            if [ ! -d "/home/circleci/project/node_modules" ]; then
              npm install
            else
              echo "NPM dependencies unchanged. Skipping install..."
            fi
      - save_cache:
          key: *npm_cache_key
          paths:
            - node_modules
  build_package:
    <<: *build_container_config
    steps:
      - checkout
      - *restore_npm_cache
      - run:
          name: NPM build
          command: |
            npm run build
      - save_cache:
          key: *npm_build_cache_key
          paths:
            - dist
  build_image:
    <<: *build_container_config
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - *restore_npm_build_cache
      - run:
          name: Build docker image
          command: |
            docker build -f .circleci/Dockerfile -t $IMAGE_NAME .
            mkdir -p ../.docker
            docker save -o ../.docker/image.tar $IMAGE_NAME
      - save_cache:
          key: *docker_cache_key
          paths:
            - ../.docker
      - store_artifacts:
          path: ../.docker/image.tar
  push_image:
    <<: *azure_container_config
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - *restore_docker_cache
      - *azure_login
      - run:
          name: Login to Azure Container Registry
          command: |
            az acr login --name $AZURE_CONTAINER_REGISTRY --subscription $AZURE_SUBSCRIPTION
      - run:
          name: Load docker image
          command: |
            docker load < ../.docker/image.tar
      - run:
          name: Tag as latest
          command: |
            docker tag $IMAGE_NAME $IMAGE_NAME:latest
      - run:
          name: Tag as CircleCI tag
          command: |
            docker tag $IMAGE_NAME $IMAGE_NAME:$CIRCLE_TAG
      - run:
          name: Push images to Azure Container Registry
          command: |
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$CIRCLE_TAG
  deploy_image:
    <<: *azure_container_config
    steps:
      - *azure_login
      - run:
          name: Login to Kubernetes cluster
          command: |
            az aks get-credentials --name $K8S_CLUSTER_NAME --resource-group $K8S_RESOURCE_GROUP --subscription $AZURE_SUBSCRIPTION
      - run:
          name: Apply upgrade
          command: |
            helm upgrade $RELEASE_NAME chart/

workflows:
  version: 2
  build:
    jobs:
      - install_package_deps:
          filters:
            branches:
              only:
                - master
                - dev
      - build_package:
          requires:
            - install_package_deps
          filters:
            branches:
              only:
                - master
                - dev
      - build_image:
          requires:
            - build_package
          filters:
            branches:
              only:
                - master
                - dev
  release:
    jobs:
      - push_image:
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*/
      - deploy_image:
          requires:
            - push_image
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*/

